apiVersion: batch/v1
kind: Job
metadata:
  name: n8n-db-init
  labels:
    app: n8n
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: postgres-client
        image: postgres:15
        command:
        - /bin/bash
        - -c
        - |
          echo "Creating n8n user and database..."
          export PGPASSWORD="$POSTGRES_PASSWORD"
          
          # Create user if it doesn't exist
          psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -tc "SELECT 1 FROM pg_user WHERE usename = 'n8n'" | grep -q 1 || 
          psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "CREATE USER n8n WITH PASSWORD '$N8N_DB_PASSWORD';"
          
          # Create database if it doesn't exist
          psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -tc "SELECT 1 FROM pg_database WHERE datname = 'n8n'" | grep -q 1 || 
          psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "CREATE DATABASE n8n OWNER n8n;"
          
          # Grant privileges
          psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "GRANT ALL PRIVILEGES ON DATABASE n8n TO n8n;"
          
          echo "n8n database setup completed successfully!"
        env:
        - name: POSTGRES_HOST
          value: postgres-service
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: N8N_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secret
              key: DB_POSTGRESDB_PASSWORD
